// ********************************************************************************* //
//      __                        __   _  __      _____  __              __ _        //
//     / /   ____   __  __ _____ / /_ (_)/ /__   / ___/ / /_ __  __ ____/ /(_)____   //
//    / /   / __ \ / / / // ___// __// // //_/   \__ \ / __// / / // __  // // __ \  //
//   / /___/ /_/ // /_/ /(__  )/ /_ / // ,<     ___/ // /_ / /_/ // /_/ // // /_/ /  //
//  /_____/\____/ \__,_//____/ \__//_//_/|_|   /____/ \__/ \__,_/ \__,_//_/ \____/   //
//                                                                                   //
// ********************************************************************************* //
//                                                                                   //
//  Project:         R-Type                                                          //
//  File:            ACommand.hpp                                                    //
//  Description:     Abstract class of the Command class                             //
//                                                                                   //
// ********************************************************************************* //

#pragma once

#include <iostream>
#include <memory>

#include "Actor.hpp"

namespace rtype {
    namespace action {
        class ACommand {
            public:
                virtual ~ACommand() {};

                virtual void perform(std::unique_ptr<rtype::actor::Actor> &actor) = 0;
        };
    }
}